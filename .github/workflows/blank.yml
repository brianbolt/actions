# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  updateACASBase:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get latest ACAS release
        id: acas-release
        run: |
          echo ::set-output name=release_tag::$(curl -sL https://api.github.com/repos/mcneilco/acas/releases/latest | jq -r ".tag_name")
          echo ::set-output name=current_tag::$(<acas-release.version)
      - name: Update ACAS
        if: steps.acas-release.outputs.current_tag != steps.acas-release.outputs.release_tag
        env:
          RELEASE_TAG: ${{ steps.acas-release.outputs.release_tag }}
        run: |
          # Update current release
          echo ${{ steps.acas-release.outputs.release_tag }} > acas-release.version
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          commit-message: Update acas-release to ${{ steps.acas-release.outputs.release_tag }}
          title: Update ACAS to ${{ steps.acas-release.outputs.release_tag }}
          body: |
            Updates [acas-release][1] to ${{ steps.acas-release.outputs.release_tag }}
            Auto-generated by [create-pull-request][2]
            [1]: https://github.com/mcneilco/acas
            [2]: https://github.com/peter-evans/create-pull-request
          labels: dependencies, automated pr
          branch: acas-release-updates
      - name: Create Pull Request
        uses: actions/github-script@v6
        with:
          script: |
            const { repo, owner } = context.repo;
            const result = await github.rest.pulls.create({
              title: 'Update ACAS to ${{ steps.acas-release.outputs.release_tag }}',
              owner,
              repo,
              head: '${{ github.ref_name }}',
              base: 'main',
              body: [
                'This PR is auto-generated by',
                '[actions/github-script](https://github.com/actions/github-script).'
              ].join('\n')
            });
            github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: result.data.number,
              labels: ['feature', 'automated pr']
            });
