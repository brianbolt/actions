name: ACAS Version Bumper

on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '* 1 * * *'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  ACASBaseUpdate:
    name: ACAS base version check and bump
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get latest ACAS release
        id: acas-release
        run: |
          echo ::set-output name=release_tag::$(curl -sL https://api.github.com/repos/mcneilco/acas/releases/latest | jq -r ".tag_name")
          echo ::set-output name=current_tag::$(<acas-release.version)
      - name: Commit base update
        if: steps.acas-release.outputs.current_tag != steps.acas-release.outputs.release_tag
        id: base-commit
        run: |
          git config --global user.name 'Your Name'
          git config --global user.email 'noreply@github.com'
          git remote prune origin
          branch=acas-bump-1.13.7.4
          echo ::set-output name=branch::${branch}
          exists=$(git ls-remote --heads origin ${branch})
          echo ::set-output name=create_pr::false
          if [ -n "$exists" ]; then
            echo "${branch} exists"
          else
            echo "${branch} does NOT exist"
            git checkout -b $branch
            echo 1.13.7.4 > acas-release.version
            git add acas-release.version
            git commit -m "Update acas-release to 1.13.7.4"
            git push --set-upstream origin $branch
            echo ::set-output name=create_pr::true
          fi
      - name: Create Pull Request and merge it
        uses: actions/github-script@v6
        if: ${{ steps.base-commit.outputs.create_pr  == 'true' }}
        with:
          script: |
            const { repo, owner } = context.repo;
            const result = await github.rest.pulls.create({
              title: 'Update ACAS to ${{ steps.acas-release.outputs.release_tag }}',
              owner,
              repo,
              head: '${{ steps.base-commit.outputs.branch }}',
              base: 'main',
              body: [
                'This PR is auto-generated by',
                '[actions/github-script](https://github.com/actions/github-script).'
              ].join('\n')
            });
            echo ::set-output name=pr-number::result.data.number
            github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: result.data.number,
              labels: ['feature', 'automated pr']
            });
            github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: result.data.number,
              labels: ['feature', 'automated pr']
            });
            github.rest.pulls.merge({
              owner,
              repo,
              pull_number,
            });
            

